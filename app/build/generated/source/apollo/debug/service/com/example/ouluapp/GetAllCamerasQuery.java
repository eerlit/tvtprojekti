// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.ouluapp;

import com.apollographql.apollo.api.Operation;
import com.apollographql.apollo.api.OperationName;
import com.apollographql.apollo.api.Query;
import com.apollographql.apollo.api.Response;
import com.apollographql.apollo.api.ResponseField;
import com.apollographql.apollo.api.ScalarTypeAdapters;
import com.apollographql.apollo.api.internal.OperationRequestBodyComposer;
import com.apollographql.apollo.api.internal.QueryDocumentMinifier;
import com.apollographql.apollo.api.internal.ResponseFieldMapper;
import com.apollographql.apollo.api.internal.ResponseFieldMarshaller;
import com.apollographql.apollo.api.internal.ResponseReader;
import com.apollographql.apollo.api.internal.ResponseWriter;
import com.apollographql.apollo.api.internal.SimpleOperationResponseParser;
import com.apollographql.apollo.api.internal.Utils;
import java.io.IOException;
import java.lang.Double;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Collections;
import java.util.List;
import okio.Buffer;
import okio.BufferedSource;
import okio.ByteString;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class GetAllCamerasQuery implements Query<GetAllCamerasQuery.Data, GetAllCamerasQuery.Data, Operation.Variables> {
  public static final String OPERATION_ID = "0688c5e633ffecc43b9af1a241915841bcbd94436e9aedb1714f82c31e5ddace";

  public static final String QUERY_DOCUMENT = QueryDocumentMinifier.minify(
    "query GetAllCameras {\n"
        + "  cameras {\n"
        + "    __typename\n"
        + "    cameraId\n"
        + "    name\n"
        + "    lat\n"
        + "    lon\n"
        + "    presets {\n"
        + "      __typename\n"
        + "      presetId\n"
        + "      presentationName\n"
        + "      imageUrl\n"
        + "      measuredTime\n"
        + "    }\n"
        + "  }\n"
        + "}"
  );

  public static final OperationName OPERATION_NAME = new OperationName() {
    @Override
    public String name() {
      return "GetAllCameras";
    }
  };

  private final Operation.Variables variables;

  public GetAllCamerasQuery() {
    this.variables = Operation.EMPTY_VARIABLES;
  }

  @Override
  public String operationId() {
    return OPERATION_ID;
  }

  @Override
  public String queryDocument() {
    return QUERY_DOCUMENT;
  }

  @Override
  public GetAllCamerasQuery.Data wrapData(GetAllCamerasQuery.Data data) {
    return data;
  }

  @Override
  public Operation.Variables variables() {
    return variables;
  }

  @Override
  public ResponseFieldMapper<GetAllCamerasQuery.Data> responseFieldMapper() {
    return new Data.Mapper();
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public OperationName name() {
    return OPERATION_NAME;
  }

  @Override
  @NotNull
  public Response<GetAllCamerasQuery.Data> parse(@NotNull final BufferedSource source,
      @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException {
    return SimpleOperationResponseParser.parse(source, this, scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<GetAllCamerasQuery.Data> parse(@NotNull final ByteString byteString,
      @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException {
    return parse(new Buffer().write(byteString), scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<GetAllCamerasQuery.Data> parse(@NotNull final BufferedSource source) throws
      IOException {
    return parse(source, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public Response<GetAllCamerasQuery.Data> parse(@NotNull final ByteString byteString) throws
      IOException {
    return parse(byteString, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(@NotNull final ScalarTypeAdapters scalarTypeAdapters) {
    return OperationRequestBodyComposer.compose(this, false, true, scalarTypeAdapters);
  }

  @NotNull
  @Override
  public ByteString composeRequestBody() {
    return OperationRequestBodyComposer.compose(this, false, true, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(final boolean autoPersistQueries,
      final boolean withQueryDocument, @NotNull final ScalarTypeAdapters scalarTypeAdapters) {
    return OperationRequestBodyComposer.compose(this, autoPersistQueries, withQueryDocument, scalarTypeAdapters);
  }

  public static final class Builder {
    Builder() {
    }

    public GetAllCamerasQuery build() {
      return new GetAllCamerasQuery();
    }
  }

  /**
   * Data from the response after executing this GraphQL operation
   */
  public static class Data implements Operation.Data {
    static final ResponseField[] $responseFields = {
      ResponseField.forList("cameras", "cameras", null, true, Collections.<ResponseField.Condition>emptyList())
    };

    final @Nullable List<Camera> cameras;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Data(@Nullable List<Camera> cameras) {
      this.cameras = cameras;
    }

    /**
     * Get all cameras
     */
    public @Nullable List<Camera> cameras() {
      return this.cameras;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeList($responseFields[0], cameras, new ResponseWriter.ListWriter() {
            @Override
            public void write(List items, ResponseWriter.ListItemWriter listItemWriter) {
              for (Object item : items) {
                listItemWriter.writeObject(((Camera) item).marshaller());
              }
            }
          });
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "cameras=" + cameras
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return ((this.cameras == null) ? (that.cameras == null) : this.cameras.equals(that.cameras));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= (cameras == null) ? 0 : cameras.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Data> {
      final Camera.Mapper cameraFieldMapper = new Camera.Mapper();

      @Override
      public Data map(ResponseReader reader) {
        final List<Camera> cameras = reader.readList($responseFields[0], new ResponseReader.ListReader<Camera>() {
          @Override
          public Camera read(ResponseReader.ListItemReader listItemReader) {
            return listItemReader.readObject(new ResponseReader.ObjectReader<Camera>() {
              @Override
              public Camera read(ResponseReader reader) {
                return cameraFieldMapper.map(reader);
              }
            });
          }
        });
        return new Data(cameras);
      }
    }
  }

  /**
   * Interface for cameras
   */
  public static class Camera {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("cameraId", "cameraId", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("name", "name", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forDouble("lat", "lat", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forDouble("lon", "lon", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forList("presets", "presets", null, true, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final @NotNull String cameraId;

    final @Nullable String name;

    final @Nullable Double lat;

    final @Nullable Double lon;

    final @Nullable List<Preset> presets;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Camera(@NotNull String __typename, @NotNull String cameraId, @Nullable String name,
        @Nullable Double lat, @Nullable Double lon, @Nullable List<Preset> presets) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.cameraId = Utils.checkNotNull(cameraId, "cameraId == null");
      this.name = name;
      this.lat = lat;
      this.lon = lon;
      this.presets = presets;
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    /**
     * ID of the camera
     */
    public @NotNull String cameraId() {
      return this.cameraId;
    }

    /**
     * Name of the camera
     */
    public @Nullable String name() {
      return this.name;
    }

    /**
     * Latitude of the place (WGS 84)
     */
    public @Nullable Double lat() {
      return this.lat;
    }

    /**
     * Longitude of the place (WGS 84)
     */
    public @Nullable Double lon() {
      return this.lon;
    }

    /**
     * Camera image presets
     */
    public @Nullable List<Preset> presets() {
      return this.presets;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeString($responseFields[1], cameraId);
          writer.writeString($responseFields[2], name);
          writer.writeDouble($responseFields[3], lat);
          writer.writeDouble($responseFields[4], lon);
          writer.writeList($responseFields[5], presets, new ResponseWriter.ListWriter() {
            @Override
            public void write(List items, ResponseWriter.ListItemWriter listItemWriter) {
              for (Object item : items) {
                listItemWriter.writeObject(((Preset) item).marshaller());
              }
            }
          });
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Camera{"
          + "__typename=" + __typename + ", "
          + "cameraId=" + cameraId + ", "
          + "name=" + name + ", "
          + "lat=" + lat + ", "
          + "lon=" + lon + ", "
          + "presets=" + presets
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Camera) {
        Camera that = (Camera) o;
        return this.__typename.equals(that.__typename)
         && this.cameraId.equals(that.cameraId)
         && ((this.name == null) ? (that.name == null) : this.name.equals(that.name))
         && ((this.lat == null) ? (that.lat == null) : this.lat.equals(that.lat))
         && ((this.lon == null) ? (that.lon == null) : this.lon.equals(that.lon))
         && ((this.presets == null) ? (that.presets == null) : this.presets.equals(that.presets));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= cameraId.hashCode();
        h *= 1000003;
        h ^= (name == null) ? 0 : name.hashCode();
        h *= 1000003;
        h ^= (lat == null) ? 0 : lat.hashCode();
        h *= 1000003;
        h ^= (lon == null) ? 0 : lon.hashCode();
        h *= 1000003;
        h ^= (presets == null) ? 0 : presets.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Camera> {
      final Preset.Mapper presetFieldMapper = new Preset.Mapper();

      @Override
      public Camera map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final String cameraId = reader.readString($responseFields[1]);
        final String name = reader.readString($responseFields[2]);
        final Double lat = reader.readDouble($responseFields[3]);
        final Double lon = reader.readDouble($responseFields[4]);
        final List<Preset> presets = reader.readList($responseFields[5], new ResponseReader.ListReader<Preset>() {
          @Override
          public Preset read(ResponseReader.ListItemReader listItemReader) {
            return listItemReader.readObject(new ResponseReader.ObjectReader<Preset>() {
              @Override
              public Preset read(ResponseReader reader) {
                return presetFieldMapper.map(reader);
              }
            });
          }
        });
        return new Camera(__typename, cameraId, name, lat, lon, presets);
      }
    }
  }

  /**
   * Camera image present
   */
  public static class Preset {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("presetId", "presetId", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("presentationName", "presentationName", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("imageUrl", "imageUrl", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("measuredTime", "measuredTime", null, true, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final @Nullable String presetId;

    final @Nullable String presentationName;

    final @Nullable String imageUrl;

    final @Nullable String measuredTime;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Preset(@NotNull String __typename, @Nullable String presetId,
        @Nullable String presentationName, @Nullable String imageUrl,
        @Nullable String measuredTime) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.presetId = presetId;
      this.presentationName = presentationName;
      this.imageUrl = imageUrl;
      this.measuredTime = measuredTime;
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    /**
     * ID of the camera preset
     */
    public @Nullable String presetId() {
      return this.presetId;
    }

    /**
     * Name of the camera preset
     */
    public @Nullable String presentationName() {
      return this.presentationName;
    }

    /**
     * Url of the camera preset
     */
    public @Nullable String imageUrl() {
      return this.imageUrl;
    }

    /**
     * Time when camera preset image was last updated, in ISO 8601 format
     */
    public @Nullable String measuredTime() {
      return this.measuredTime;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeString($responseFields[1], presetId);
          writer.writeString($responseFields[2], presentationName);
          writer.writeString($responseFields[3], imageUrl);
          writer.writeString($responseFields[4], measuredTime);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Preset{"
          + "__typename=" + __typename + ", "
          + "presetId=" + presetId + ", "
          + "presentationName=" + presentationName + ", "
          + "imageUrl=" + imageUrl + ", "
          + "measuredTime=" + measuredTime
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Preset) {
        Preset that = (Preset) o;
        return this.__typename.equals(that.__typename)
         && ((this.presetId == null) ? (that.presetId == null) : this.presetId.equals(that.presetId))
         && ((this.presentationName == null) ? (that.presentationName == null) : this.presentationName.equals(that.presentationName))
         && ((this.imageUrl == null) ? (that.imageUrl == null) : this.imageUrl.equals(that.imageUrl))
         && ((this.measuredTime == null) ? (that.measuredTime == null) : this.measuredTime.equals(that.measuredTime));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= (presetId == null) ? 0 : presetId.hashCode();
        h *= 1000003;
        h ^= (presentationName == null) ? 0 : presentationName.hashCode();
        h *= 1000003;
        h ^= (imageUrl == null) ? 0 : imageUrl.hashCode();
        h *= 1000003;
        h ^= (measuredTime == null) ? 0 : measuredTime.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Preset> {
      @Override
      public Preset map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final String presetId = reader.readString($responseFields[1]);
        final String presentationName = reader.readString($responseFields[2]);
        final String imageUrl = reader.readString($responseFields[3]);
        final String measuredTime = reader.readString($responseFields[4]);
        return new Preset(__typename, presetId, presentationName, imageUrl, measuredTime);
      }
    }
  }
}
