// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.ouluapp;

import com.apollographql.apollo.api.Operation;
import com.apollographql.apollo.api.OperationName;
import com.apollographql.apollo.api.Query;
import com.apollographql.apollo.api.Response;
import com.apollographql.apollo.api.ResponseField;
import com.apollographql.apollo.api.ScalarTypeAdapters;
import com.apollographql.apollo.api.internal.OperationRequestBodyComposer;
import com.apollographql.apollo.api.internal.QueryDocumentMinifier;
import com.apollographql.apollo.api.internal.ResponseFieldMapper;
import com.apollographql.apollo.api.internal.ResponseFieldMarshaller;
import com.apollographql.apollo.api.internal.ResponseReader;
import com.apollographql.apollo.api.internal.ResponseWriter;
import com.apollographql.apollo.api.internal.SimpleOperationResponseParser;
import com.apollographql.apollo.api.internal.UnmodifiableMapBuilder;
import com.apollographql.apollo.api.internal.Utils;
import java.io.IOException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Collections;
import java.util.List;
import okio.Buffer;
import okio.BufferedSource;
import okio.ByteString;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class StopsByBboxQuery implements Query<StopsByBboxQuery.Data, StopsByBboxQuery.Data, Operation.Variables> {
  public static final String OPERATION_ID = "268d4d6349a849f2fcedcdee4f5fed725c818e3e967d44b5266b6d84e08c7043";

  public static final String QUERY_DOCUMENT = QueryDocumentMinifier.minify(
    "query stopsByBbox {\n"
        + "  stopsByBbox(minLat: 64.7593, minLon: 24.5628, maxLat: 65.3724, maxLon: 26.4211) {\n"
        + "    __typename\n"
        + "    lat\n"
        + "    lon\n"
        + "    name\n"
        + "    stoptimesWithoutPatterns(omitCanceled: true, numberOfDepartures: 4) {\n"
        + "      __typename\n"
        + "      scheduledArrival\n"
        + "      realtimeArrival\n"
        + "      scheduledDeparture\n"
        + "      headsign\n"
        + "      trip {\n"
        + "        __typename\n"
        + "        routeShortName\n"
        + "      }\n"
        + "    }\n"
        + "  }\n"
        + "}"
  );

  public static final OperationName OPERATION_NAME = new OperationName() {
    @Override
    public String name() {
      return "stopsByBbox";
    }
  };

  private final Operation.Variables variables;

  public StopsByBboxQuery() {
    this.variables = Operation.EMPTY_VARIABLES;
  }

  @Override
  public String operationId() {
    return OPERATION_ID;
  }

  @Override
  public String queryDocument() {
    return QUERY_DOCUMENT;
  }

  @Override
  public StopsByBboxQuery.Data wrapData(StopsByBboxQuery.Data data) {
    return data;
  }

  @Override
  public Operation.Variables variables() {
    return variables;
  }

  @Override
  public ResponseFieldMapper<StopsByBboxQuery.Data> responseFieldMapper() {
    return new Data.Mapper();
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public OperationName name() {
    return OPERATION_NAME;
  }

  @Override
  @NotNull
  public Response<StopsByBboxQuery.Data> parse(@NotNull final BufferedSource source,
      @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException {
    return SimpleOperationResponseParser.parse(source, this, scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<StopsByBboxQuery.Data> parse(@NotNull final ByteString byteString,
      @NotNull final ScalarTypeAdapters scalarTypeAdapters) throws IOException {
    return parse(new Buffer().write(byteString), scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<StopsByBboxQuery.Data> parse(@NotNull final BufferedSource source) throws
      IOException {
    return parse(source, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public Response<StopsByBboxQuery.Data> parse(@NotNull final ByteString byteString) throws
      IOException {
    return parse(byteString, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(@NotNull final ScalarTypeAdapters scalarTypeAdapters) {
    return OperationRequestBodyComposer.compose(this, false, true, scalarTypeAdapters);
  }

  @NotNull
  @Override
  public ByteString composeRequestBody() {
    return OperationRequestBodyComposer.compose(this, false, true, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(final boolean autoPersistQueries,
      final boolean withQueryDocument, @NotNull final ScalarTypeAdapters scalarTypeAdapters) {
    return OperationRequestBodyComposer.compose(this, autoPersistQueries, withQueryDocument, scalarTypeAdapters);
  }

  public static final class Builder {
    Builder() {
    }

    public StopsByBboxQuery build() {
      return new StopsByBboxQuery();
    }
  }

  /**
   * Data from the response after executing this GraphQL operation
   */
  public static class Data implements Operation.Data {
    static final ResponseField[] $responseFields = {
      ResponseField.forList("stopsByBbox", "stopsByBbox", new UnmodifiableMapBuilder<String, Object>(4)
      .put("minLat", 64.7593f)
      .put("minLon", 24.5628f)
      .put("maxLat", 65.3724f)
      .put("maxLon", 26.4211f)
      .build(), true, Collections.<ResponseField.Condition>emptyList())
    };

    final @Nullable List<StopsByBbox> stopsByBbox;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Data(@Nullable List<StopsByBbox> stopsByBbox) {
      this.stopsByBbox = stopsByBbox;
    }

    /**
     * Get all stops within the specified bounding box
     */
    public @Nullable List<StopsByBbox> stopsByBbox() {
      return this.stopsByBbox;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeList($responseFields[0], stopsByBbox, new ResponseWriter.ListWriter() {
            @Override
            public void write(List items, ResponseWriter.ListItemWriter listItemWriter) {
              for (Object item : items) {
                listItemWriter.writeObject(((StopsByBbox) item).marshaller());
              }
            }
          });
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "stopsByBbox=" + stopsByBbox
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return ((this.stopsByBbox == null) ? (that.stopsByBbox == null) : this.stopsByBbox.equals(that.stopsByBbox));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= (stopsByBbox == null) ? 0 : stopsByBbox.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Data> {
      final StopsByBbox.Mapper stopsByBboxFieldMapper = new StopsByBbox.Mapper();

      @Override
      public Data map(ResponseReader reader) {
        final List<StopsByBbox> stopsByBbox = reader.readList($responseFields[0], new ResponseReader.ListReader<StopsByBbox>() {
          @Override
          public StopsByBbox read(ResponseReader.ListItemReader listItemReader) {
            return listItemReader.readObject(new ResponseReader.ObjectReader<StopsByBbox>() {
              @Override
              public StopsByBbox read(ResponseReader reader) {
                return stopsByBboxFieldMapper.map(reader);
              }
            });
          }
        });
        return new Data(stopsByBbox);
      }
    }
  }

  /**
   * Stop can represent either a single public transport stop, where passengers can
   * board and/or disembark vehicles, or a station, which contains multiple stops.
   * See field `locationType`.
   */
  public static class StopsByBbox {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forDouble("lat", "lat", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forDouble("lon", "lon", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("name", "name", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forList("stoptimesWithoutPatterns", "stoptimesWithoutPatterns", new UnmodifiableMapBuilder<String, Object>(2)
      .put("omitCanceled", true)
      .put("numberOfDepartures", 4)
      .build(), true, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final @Nullable Double lat;

    final @Nullable Double lon;

    final @NotNull String name;

    final @Nullable List<StoptimesWithoutPattern> stoptimesWithoutPatterns;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public StopsByBbox(@NotNull String __typename, @Nullable Double lat, @Nullable Double lon,
        @NotNull String name, @Nullable List<StoptimesWithoutPattern> stoptimesWithoutPatterns) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.lat = lat;
      this.lon = lon;
      this.name = Utils.checkNotNull(name, "name == null");
      this.stoptimesWithoutPatterns = stoptimesWithoutPatterns;
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    /**
     * Latitude of the stop (WGS 84)
     */
    public @Nullable Double lat() {
      return this.lat;
    }

    /**
     * Longitude of the stop (WGS 84)
     */
    public @Nullable Double lon() {
      return this.lon;
    }

    /**
     * Name of the stop, e.g. Pasilan asema
     */
    public @NotNull String name() {
      return this.name;
    }

    /**
     * Returns list of stoptimes (arrivals and departures) at this stop
     */
    public @Nullable List<StoptimesWithoutPattern> stoptimesWithoutPatterns() {
      return this.stoptimesWithoutPatterns;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeDouble($responseFields[1], lat);
          writer.writeDouble($responseFields[2], lon);
          writer.writeString($responseFields[3], name);
          writer.writeList($responseFields[4], stoptimesWithoutPatterns, new ResponseWriter.ListWriter() {
            @Override
            public void write(List items, ResponseWriter.ListItemWriter listItemWriter) {
              for (Object item : items) {
                listItemWriter.writeObject(((StoptimesWithoutPattern) item).marshaller());
              }
            }
          });
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "StopsByBbox{"
          + "__typename=" + __typename + ", "
          + "lat=" + lat + ", "
          + "lon=" + lon + ", "
          + "name=" + name + ", "
          + "stoptimesWithoutPatterns=" + stoptimesWithoutPatterns
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof StopsByBbox) {
        StopsByBbox that = (StopsByBbox) o;
        return this.__typename.equals(that.__typename)
         && ((this.lat == null) ? (that.lat == null) : this.lat.equals(that.lat))
         && ((this.lon == null) ? (that.lon == null) : this.lon.equals(that.lon))
         && this.name.equals(that.name)
         && ((this.stoptimesWithoutPatterns == null) ? (that.stoptimesWithoutPatterns == null) : this.stoptimesWithoutPatterns.equals(that.stoptimesWithoutPatterns));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= (lat == null) ? 0 : lat.hashCode();
        h *= 1000003;
        h ^= (lon == null) ? 0 : lon.hashCode();
        h *= 1000003;
        h ^= name.hashCode();
        h *= 1000003;
        h ^= (stoptimesWithoutPatterns == null) ? 0 : stoptimesWithoutPatterns.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<StopsByBbox> {
      final StoptimesWithoutPattern.Mapper stoptimesWithoutPatternFieldMapper = new StoptimesWithoutPattern.Mapper();

      @Override
      public StopsByBbox map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final Double lat = reader.readDouble($responseFields[1]);
        final Double lon = reader.readDouble($responseFields[2]);
        final String name = reader.readString($responseFields[3]);
        final List<StoptimesWithoutPattern> stoptimesWithoutPatterns = reader.readList($responseFields[4], new ResponseReader.ListReader<StoptimesWithoutPattern>() {
          @Override
          public StoptimesWithoutPattern read(ResponseReader.ListItemReader listItemReader) {
            return listItemReader.readObject(new ResponseReader.ObjectReader<StoptimesWithoutPattern>() {
              @Override
              public StoptimesWithoutPattern read(ResponseReader reader) {
                return stoptimesWithoutPatternFieldMapper.map(reader);
              }
            });
          }
        });
        return new StopsByBbox(__typename, lat, lon, name, stoptimesWithoutPatterns);
      }
    }
  }

  /**
   * Stoptime represents the time when a specific trip arrives to or departs from a specific stop.
   */
  public static class StoptimesWithoutPattern {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forInt("scheduledArrival", "scheduledArrival", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forInt("realtimeArrival", "realtimeArrival", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forInt("scheduledDeparture", "scheduledDeparture", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("headsign", "headsign", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forObject("trip", "trip", null, true, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final @Nullable Integer scheduledArrival;

    final @Nullable Integer realtimeArrival;

    final @Nullable Integer scheduledDeparture;

    final @Nullable String headsign;

    final @Nullable Trip trip;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public StoptimesWithoutPattern(@NotNull String __typename, @Nullable Integer scheduledArrival,
        @Nullable Integer realtimeArrival, @Nullable Integer scheduledDeparture,
        @Nullable String headsign, @Nullable Trip trip) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.scheduledArrival = scheduledArrival;
      this.realtimeArrival = realtimeArrival;
      this.scheduledDeparture = scheduledDeparture;
      this.headsign = headsign;
      this.trip = trip;
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    /**
     * Scheduled arrival time. Format: seconds since midnight of the departure date
     */
    public @Nullable Integer scheduledArrival() {
      return this.scheduledArrival;
    }

    /**
     * Realtime prediction of arrival time. Format: seconds since midnight of the departure date
     */
    public @Nullable Integer realtimeArrival() {
      return this.realtimeArrival;
    }

    /**
     * Scheduled departure time. Format: seconds since midnight of the departure date
     */
    public @Nullable Integer scheduledDeparture() {
      return this.scheduledDeparture;
    }

    /**
     * Vehicle headsign of the trip on this stop. Trip headsigns can change during
     * the trip (e.g. on routes which run on loops), so this value should be used
     * instead of `tripHeadsign` to display the headsign relevant to the user.
     */
    public @Nullable String headsign() {
      return this.headsign;
    }

    /**
     * Trip which this stoptime is for
     */
    public @Nullable Trip trip() {
      return this.trip;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeInt($responseFields[1], scheduledArrival);
          writer.writeInt($responseFields[2], realtimeArrival);
          writer.writeInt($responseFields[3], scheduledDeparture);
          writer.writeString($responseFields[4], headsign);
          writer.writeObject($responseFields[5], trip != null ? trip.marshaller() : null);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "StoptimesWithoutPattern{"
          + "__typename=" + __typename + ", "
          + "scheduledArrival=" + scheduledArrival + ", "
          + "realtimeArrival=" + realtimeArrival + ", "
          + "scheduledDeparture=" + scheduledDeparture + ", "
          + "headsign=" + headsign + ", "
          + "trip=" + trip
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof StoptimesWithoutPattern) {
        StoptimesWithoutPattern that = (StoptimesWithoutPattern) o;
        return this.__typename.equals(that.__typename)
         && ((this.scheduledArrival == null) ? (that.scheduledArrival == null) : this.scheduledArrival.equals(that.scheduledArrival))
         && ((this.realtimeArrival == null) ? (that.realtimeArrival == null) : this.realtimeArrival.equals(that.realtimeArrival))
         && ((this.scheduledDeparture == null) ? (that.scheduledDeparture == null) : this.scheduledDeparture.equals(that.scheduledDeparture))
         && ((this.headsign == null) ? (that.headsign == null) : this.headsign.equals(that.headsign))
         && ((this.trip == null) ? (that.trip == null) : this.trip.equals(that.trip));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= (scheduledArrival == null) ? 0 : scheduledArrival.hashCode();
        h *= 1000003;
        h ^= (realtimeArrival == null) ? 0 : realtimeArrival.hashCode();
        h *= 1000003;
        h ^= (scheduledDeparture == null) ? 0 : scheduledDeparture.hashCode();
        h *= 1000003;
        h ^= (headsign == null) ? 0 : headsign.hashCode();
        h *= 1000003;
        h ^= (trip == null) ? 0 : trip.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<StoptimesWithoutPattern> {
      final Trip.Mapper tripFieldMapper = new Trip.Mapper();

      @Override
      public StoptimesWithoutPattern map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final Integer scheduledArrival = reader.readInt($responseFields[1]);
        final Integer realtimeArrival = reader.readInt($responseFields[2]);
        final Integer scheduledDeparture = reader.readInt($responseFields[3]);
        final String headsign = reader.readString($responseFields[4]);
        final Trip trip = reader.readObject($responseFields[5], new ResponseReader.ObjectReader<Trip>() {
          @Override
          public Trip read(ResponseReader reader) {
            return tripFieldMapper.map(reader);
          }
        });
        return new StoptimesWithoutPattern(__typename, scheduledArrival, realtimeArrival, scheduledDeparture, headsign, trip);
      }
    }
  }

  /**
   * Trip is a specific occurance of a pattern, usually identified by route, direction on the route and exact departure time.
   */
  public static class Trip {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("routeShortName", "routeShortName", null, true, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final @Nullable String routeShortName;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Trip(@NotNull String __typename, @Nullable String routeShortName) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.routeShortName = routeShortName;
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    /**
     * Short name of the route this trip is running. See field `shortName` of Route.
     */
    public @Nullable String routeShortName() {
      return this.routeShortName;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeString($responseFields[1], routeShortName);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Trip{"
          + "__typename=" + __typename + ", "
          + "routeShortName=" + routeShortName
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Trip) {
        Trip that = (Trip) o;
        return this.__typename.equals(that.__typename)
         && ((this.routeShortName == null) ? (that.routeShortName == null) : this.routeShortName.equals(that.routeShortName));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= (routeShortName == null) ? 0 : routeShortName.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Trip> {
      @Override
      public Trip map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final String routeShortName = reader.readString($responseFields[1]);
        return new Trip(__typename, routeShortName);
      }
    }
  }
}
