// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL plugin from the GraphQL queries it found.
// It should not be modified by hand.
//
package com.example.ouluapp;

import com.apollographql.apollo.api.Operation;
import com.apollographql.apollo.api.OperationName;
import com.apollographql.apollo.api.Query;
import com.apollographql.apollo.api.Response;
import com.apollographql.apollo.api.ResponseField;
import com.apollographql.apollo.api.ScalarTypeAdapters;
import com.apollographql.apollo.api.internal.OperationRequestBodyComposer;
import com.apollographql.apollo.api.internal.QueryDocumentMinifier;
import com.apollographql.apollo.api.internal.ResponseFieldMapper;
import com.apollographql.apollo.api.internal.ResponseFieldMarshaller;
import com.apollographql.apollo.api.internal.ResponseReader;
import com.apollographql.apollo.api.internal.ResponseWriter;
import com.apollographql.apollo.api.internal.SimpleOperationResponseParser;
import com.apollographql.apollo.api.internal.Utils;
import com.example.ouluapp.type.CustomType;
import com.example.ouluapp.type.TrafficFlow;
import com.example.ouluapp.type.TrafficFluencySourceType;
import java.io.IOException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Collections;
import java.util.List;
import okio.Buffer;
import okio.BufferedSource;
import okio.ByteString;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

public final class GetTrafficFluencyFeatureCollectionQuery implements Query<GetTrafficFluencyFeatureCollectionQuery.Data, GetTrafficFluencyFeatureCollectionQuery.Data, Operation.Variables> {
  public static final String OPERATION_ID = "a841258b565ff9eea0c39fa4f6ccc0840bb9e58d675ef0255baee1810b29f111";

  public static final String QUERY_DOCUMENT = QueryDocumentMinifier.minify(
    "query GetTrafficFluencyFeatureCollection {\n"
        + "  trafficFluencyFeatureCollection {\n"
        + "    __typename\n"
        + "    type\n"
        + "    features {\n"
        + "      __typename\n"
        + "      type\n"
        + "      geometry\n"
        + "      properties {\n"
        + "        __typename\n"
        + "        id\n"
        + "        type\n"
        + "        measuredTime\n"
        + "        trafficFlow\n"
        + "        name\n"
        + "        trafficDirection\n"
        + "        trafficDirectionName\n"
        + "        speedLimit\n"
        + "        averageSpeed\n"
        + "        detName\n"
        + "        giveWayDelay\n"
        + "        maxWaitCycles\n"
        + "      }\n"
        + "    }\n"
        + "  }\n"
        + "}"
  );

  public static final OperationName OPERATION_NAME = new OperationName() {
    @Override
    public String name() {
      return "GetTrafficFluencyFeatureCollection";
    }
  };

  private final Operation.Variables variables;

  public GetTrafficFluencyFeatureCollectionQuery() {
    this.variables = Operation.EMPTY_VARIABLES;
  }

  @Override
  public String operationId() {
    return OPERATION_ID;
  }

  @Override
  public String queryDocument() {
    return QUERY_DOCUMENT;
  }

  @Override
  public GetTrafficFluencyFeatureCollectionQuery.Data wrapData(
      GetTrafficFluencyFeatureCollectionQuery.Data data) {
    return data;
  }

  @Override
  public Operation.Variables variables() {
    return variables;
  }

  @Override
  public ResponseFieldMapper<GetTrafficFluencyFeatureCollectionQuery.Data> responseFieldMapper() {
    return new Data.Mapper();
  }

  public static Builder builder() {
    return new Builder();
  }

  @Override
  public OperationName name() {
    return OPERATION_NAME;
  }

  @Override
  @NotNull
  public Response<GetTrafficFluencyFeatureCollectionQuery.Data> parse(
      @NotNull final BufferedSource source, @NotNull final ScalarTypeAdapters scalarTypeAdapters)
      throws IOException {
    return SimpleOperationResponseParser.parse(source, this, scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<GetTrafficFluencyFeatureCollectionQuery.Data> parse(
      @NotNull final ByteString byteString, @NotNull final ScalarTypeAdapters scalarTypeAdapters)
      throws IOException {
    return parse(new Buffer().write(byteString), scalarTypeAdapters);
  }

  @Override
  @NotNull
  public Response<GetTrafficFluencyFeatureCollectionQuery.Data> parse(
      @NotNull final BufferedSource source) throws IOException {
    return parse(source, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public Response<GetTrafficFluencyFeatureCollectionQuery.Data> parse(
      @NotNull final ByteString byteString) throws IOException {
    return parse(byteString, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(@NotNull final ScalarTypeAdapters scalarTypeAdapters) {
    return OperationRequestBodyComposer.compose(this, false, true, scalarTypeAdapters);
  }

  @NotNull
  @Override
  public ByteString composeRequestBody() {
    return OperationRequestBodyComposer.compose(this, false, true, ScalarTypeAdapters.DEFAULT);
  }

  @Override
  @NotNull
  public ByteString composeRequestBody(final boolean autoPersistQueries,
      final boolean withQueryDocument, @NotNull final ScalarTypeAdapters scalarTypeAdapters) {
    return OperationRequestBodyComposer.compose(this, autoPersistQueries, withQueryDocument, scalarTypeAdapters);
  }

  public static final class Builder {
    Builder() {
    }

    public GetTrafficFluencyFeatureCollectionQuery build() {
      return new GetTrafficFluencyFeatureCollectionQuery();
    }
  }

  /**
   * Data from the response after executing this GraphQL operation
   */
  public static class Data implements Operation.Data {
    static final ResponseField[] $responseFields = {
      ResponseField.forObject("trafficFluencyFeatureCollection", "trafficFluencyFeatureCollection", null, true, Collections.<ResponseField.Condition>emptyList())
    };

    final @Nullable TrafficFluencyFeatureCollection trafficFluencyFeatureCollection;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Data(@Nullable TrafficFluencyFeatureCollection trafficFluencyFeatureCollection) {
      this.trafficFluencyFeatureCollection = trafficFluencyFeatureCollection;
    }

    /**
     * Get a collection of all traffic fluency GeoJSON features
     */
    public @Nullable TrafficFluencyFeatureCollection trafficFluencyFeatureCollection() {
      return this.trafficFluencyFeatureCollection;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeObject($responseFields[0], trafficFluencyFeatureCollection != null ? trafficFluencyFeatureCollection.marshaller() : null);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Data{"
          + "trafficFluencyFeatureCollection=" + trafficFluencyFeatureCollection
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Data) {
        Data that = (Data) o;
        return ((this.trafficFluencyFeatureCollection == null) ? (that.trafficFluencyFeatureCollection == null) : this.trafficFluencyFeatureCollection.equals(that.trafficFluencyFeatureCollection));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= (trafficFluencyFeatureCollection == null) ? 0 : trafficFluencyFeatureCollection.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Data> {
      final TrafficFluencyFeatureCollection.Mapper trafficFluencyFeatureCollectionFieldMapper = new TrafficFluencyFeatureCollection.Mapper();

      @Override
      public Data map(ResponseReader reader) {
        final TrafficFluencyFeatureCollection trafficFluencyFeatureCollection = reader.readObject($responseFields[0], new ResponseReader.ObjectReader<TrafficFluencyFeatureCollection>() {
          @Override
          public TrafficFluencyFeatureCollection read(ResponseReader reader) {
            return trafficFluencyFeatureCollectionFieldMapper.map(reader);
          }
        });
        return new Data(trafficFluencyFeatureCollection);
      }
    }
  }

  /**
   * Traffic fluency feature collection type
   */
  public static class TrafficFluencyFeatureCollection {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("type", "type", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forList("features", "features", null, false, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final @Nullable String type;

    final @NotNull List<Feature> features;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public TrafficFluencyFeatureCollection(@NotNull String __typename, @Nullable String type,
        @NotNull List<Feature> features) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.type = type;
      this.features = Utils.checkNotNull(features, "features == null");
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    /**
     * The type of collection, i.e. FeatureCollection
     */
    public @Nullable String type() {
      return this.type;
    }

    /**
     * The traffic fluency features
     */
    public @NotNull List<Feature> features() {
      return this.features;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeString($responseFields[1], type);
          writer.writeList($responseFields[2], features, new ResponseWriter.ListWriter() {
            @Override
            public void write(List items, ResponseWriter.ListItemWriter listItemWriter) {
              for (Object item : items) {
                listItemWriter.writeObject(((Feature) item).marshaller());
              }
            }
          });
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "TrafficFluencyFeatureCollection{"
          + "__typename=" + __typename + ", "
          + "type=" + type + ", "
          + "features=" + features
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof TrafficFluencyFeatureCollection) {
        TrafficFluencyFeatureCollection that = (TrafficFluencyFeatureCollection) o;
        return this.__typename.equals(that.__typename)
         && ((this.type == null) ? (that.type == null) : this.type.equals(that.type))
         && this.features.equals(that.features);
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= (type == null) ? 0 : type.hashCode();
        h *= 1000003;
        h ^= features.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<TrafficFluencyFeatureCollection> {
      final Feature.Mapper featureFieldMapper = new Feature.Mapper();

      @Override
      public TrafficFluencyFeatureCollection map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final String type = reader.readString($responseFields[1]);
        final List<Feature> features = reader.readList($responseFields[2], new ResponseReader.ListReader<Feature>() {
          @Override
          public Feature read(ResponseReader.ListItemReader listItemReader) {
            return listItemReader.readObject(new ResponseReader.ObjectReader<Feature>() {
              @Override
              public Feature read(ResponseReader reader) {
                return featureFieldMapper.map(reader);
              }
            });
          }
        });
        return new TrafficFluencyFeatureCollection(__typename, type, features);
      }
    }
  }

  /**
   * Traffic fluency feature type
   */
  public static class Feature {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("type", "type", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forCustomType("geometry", "geometry", null, true, CustomType.GEOMETRYINTERFACE, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forObject("properties", "properties", null, true, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final @Nullable String type;

    final @Nullable Object geometry;

    final @Nullable Properties properties;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Feature(@NotNull String __typename, @Nullable String type, @Nullable Object geometry,
        @Nullable Properties properties) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.type = type;
      this.geometry = geometry;
      this.properties = properties;
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    /**
     * The type of feature, i.e. Feature
     */
    public @Nullable String type() {
      return this.type;
    }

    /**
     * The traffic fluency feature geometry as a GeoJSON geometry object
     */
    public @Nullable Object geometry() {
      return this.geometry;
    }

    /**
     * The traffic fluency feature properties as a GeoJSON properties object
     */
    public @Nullable Properties properties() {
      return this.properties;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeString($responseFields[1], type);
          writer.writeCustom((ResponseField.CustomTypeField) $responseFields[2], geometry);
          writer.writeObject($responseFields[3], properties != null ? properties.marshaller() : null);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Feature{"
          + "__typename=" + __typename + ", "
          + "type=" + type + ", "
          + "geometry=" + geometry + ", "
          + "properties=" + properties
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Feature) {
        Feature that = (Feature) o;
        return this.__typename.equals(that.__typename)
         && ((this.type == null) ? (that.type == null) : this.type.equals(that.type))
         && ((this.geometry == null) ? (that.geometry == null) : this.geometry.equals(that.geometry))
         && ((this.properties == null) ? (that.properties == null) : this.properties.equals(that.properties));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= (type == null) ? 0 : type.hashCode();
        h *= 1000003;
        h ^= (geometry == null) ? 0 : geometry.hashCode();
        h *= 1000003;
        h ^= (properties == null) ? 0 : properties.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Feature> {
      final Properties.Mapper propertiesFieldMapper = new Properties.Mapper();

      @Override
      public Feature map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final String type = reader.readString($responseFields[1]);
        final Object geometry = reader.readCustomType((ResponseField.CustomTypeField) $responseFields[2]);
        final Properties properties = reader.readObject($responseFields[3], new ResponseReader.ObjectReader<Properties>() {
          @Override
          public Properties read(ResponseReader reader) {
            return propertiesFieldMapper.map(reader);
          }
        });
        return new Feature(__typename, type, geometry, properties);
      }
    }
  }

  /**
   * Traffic fluency feature properties type
   */
  public static class Properties {
    static final ResponseField[] $responseFields = {
      ResponseField.forString("__typename", "__typename", null, false, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("id", "id", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("type", "type", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forCustomType("measuredTime", "measuredTime", null, true, CustomType.GRAPHQLDATETIME, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("trafficFlow", "trafficFlow", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("name", "name", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forInt("trafficDirection", "trafficDirection", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("trafficDirectionName", "trafficDirectionName", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forInt("speedLimit", "speedLimit", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forInt("averageSpeed", "averageSpeed", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forString("detName", "detName", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forDouble("giveWayDelay", "giveWayDelay", null, true, Collections.<ResponseField.Condition>emptyList()),
      ResponseField.forDouble("maxWaitCycles", "maxWaitCycles", null, true, Collections.<ResponseField.Condition>emptyList())
    };

    final @NotNull String __typename;

    final @Nullable String id;

    final @Nullable TrafficFluencySourceType type;

    final @Nullable Object measuredTime;

    final @Nullable TrafficFlow trafficFlow;

    final @Nullable String name;

    final @Nullable Integer trafficDirection;

    final @Nullable String trafficDirectionName;

    final @Nullable Integer speedLimit;

    final @Nullable Integer averageSpeed;

    final @Nullable String detName;

    final @Nullable Double giveWayDelay;

    final @Nullable Double maxWaitCycles;

    private transient volatile String $toString;

    private transient volatile int $hashCode;

    private transient volatile boolean $hashCodeMemoized;

    public Properties(@NotNull String __typename, @Nullable String id,
        @Nullable TrafficFluencySourceType type, @Nullable Object measuredTime,
        @Nullable TrafficFlow trafficFlow, @Nullable String name,
        @Nullable Integer trafficDirection, @Nullable String trafficDirectionName,
        @Nullable Integer speedLimit, @Nullable Integer averageSpeed, @Nullable String detName,
        @Nullable Double giveWayDelay, @Nullable Double maxWaitCycles) {
      this.__typename = Utils.checkNotNull(__typename, "__typename == null");
      this.id = id;
      this.type = type;
      this.measuredTime = measuredTime;
      this.trafficFlow = trafficFlow;
      this.name = name;
      this.trafficDirection = trafficDirection;
      this.trafficDirectionName = trafficDirectionName;
      this.speedLimit = speedLimit;
      this.averageSpeed = averageSpeed;
      this.detName = detName;
      this.giveWayDelay = giveWayDelay;
      this.maxWaitCycles = maxWaitCycles;
    }

    public @NotNull String __typename() {
      return this.__typename;
    }

    /**
     * The ID of the traffic fluency feature
     */
    public @Nullable String id() {
      return this.id;
    }

    /**
     * The type of the traffic fluency feature, either TpmKpi (Traffic Performance
     * Monitoring) or TmsStation (Traffic Monitoring System)
     */
    public @Nullable TrafficFluencySourceType type() {
      return this.type;
    }

    /**
     * The timestamp when the traffic flow was calculated
     */
    public @Nullable Object measuredTime() {
      return this.measuredTime;
    }

    /**
     * The current traffic flow
     */
    public @Nullable TrafficFlow trafficFlow() {
      return this.trafficFlow;
    }

    /**
     * The name of the traffic fluency feature
     */
    public @Nullable String name() {
      return this.name;
    }

    /**
     * The traffic direction, either 1 or 2
     */
    public @Nullable Integer trafficDirection() {
      return this.trafficDirection;
    }

    /**
     * The traffic direction name, i.e. name of the municipality the road is headed for
     */
    public @Nullable String trafficDirectionName() {
      return this.trafficDirectionName;
    }

    /**
     * The speed limit at the TMS station used to calculate traffic flow
     */
    public @Nullable Integer speedLimit() {
      return this.speedLimit;
    }

    /**
     * The average speed at the TMS station when traffic flow was calculated
     */
    public @Nullable Integer averageSpeed() {
      return this.averageSpeed;
    }

    /**
     * The detector name of the TPM data collection device
     */
    public @Nullable String detName() {
      return this.detName;
    }

    /**
     * The give way delay registred by the TPM device when traffic flow was calculated
     */
    public @Nullable Double giveWayDelay() {
      return this.giveWayDelay;
    }

    /**
     * The max wait cycles registred by the TPM device when traffic flow was calculated
     */
    public @Nullable Double maxWaitCycles() {
      return this.maxWaitCycles;
    }

    @SuppressWarnings({"rawtypes", "unchecked"})
    public ResponseFieldMarshaller marshaller() {
      return new ResponseFieldMarshaller() {
        @Override
        public void marshal(ResponseWriter writer) {
          writer.writeString($responseFields[0], __typename);
          writer.writeString($responseFields[1], id);
          writer.writeString($responseFields[2], type != null ? type.rawValue() : null);
          writer.writeCustom((ResponseField.CustomTypeField) $responseFields[3], measuredTime);
          writer.writeString($responseFields[4], trafficFlow != null ? trafficFlow.rawValue() : null);
          writer.writeString($responseFields[5], name);
          writer.writeInt($responseFields[6], trafficDirection);
          writer.writeString($responseFields[7], trafficDirectionName);
          writer.writeInt($responseFields[8], speedLimit);
          writer.writeInt($responseFields[9], averageSpeed);
          writer.writeString($responseFields[10], detName);
          writer.writeDouble($responseFields[11], giveWayDelay);
          writer.writeDouble($responseFields[12], maxWaitCycles);
        }
      };
    }

    @Override
    public String toString() {
      if ($toString == null) {
        $toString = "Properties{"
          + "__typename=" + __typename + ", "
          + "id=" + id + ", "
          + "type=" + type + ", "
          + "measuredTime=" + measuredTime + ", "
          + "trafficFlow=" + trafficFlow + ", "
          + "name=" + name + ", "
          + "trafficDirection=" + trafficDirection + ", "
          + "trafficDirectionName=" + trafficDirectionName + ", "
          + "speedLimit=" + speedLimit + ", "
          + "averageSpeed=" + averageSpeed + ", "
          + "detName=" + detName + ", "
          + "giveWayDelay=" + giveWayDelay + ", "
          + "maxWaitCycles=" + maxWaitCycles
          + "}";
      }
      return $toString;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (o instanceof Properties) {
        Properties that = (Properties) o;
        return this.__typename.equals(that.__typename)
         && ((this.id == null) ? (that.id == null) : this.id.equals(that.id))
         && ((this.type == null) ? (that.type == null) : this.type.equals(that.type))
         && ((this.measuredTime == null) ? (that.measuredTime == null) : this.measuredTime.equals(that.measuredTime))
         && ((this.trafficFlow == null) ? (that.trafficFlow == null) : this.trafficFlow.equals(that.trafficFlow))
         && ((this.name == null) ? (that.name == null) : this.name.equals(that.name))
         && ((this.trafficDirection == null) ? (that.trafficDirection == null) : this.trafficDirection.equals(that.trafficDirection))
         && ((this.trafficDirectionName == null) ? (that.trafficDirectionName == null) : this.trafficDirectionName.equals(that.trafficDirectionName))
         && ((this.speedLimit == null) ? (that.speedLimit == null) : this.speedLimit.equals(that.speedLimit))
         && ((this.averageSpeed == null) ? (that.averageSpeed == null) : this.averageSpeed.equals(that.averageSpeed))
         && ((this.detName == null) ? (that.detName == null) : this.detName.equals(that.detName))
         && ((this.giveWayDelay == null) ? (that.giveWayDelay == null) : this.giveWayDelay.equals(that.giveWayDelay))
         && ((this.maxWaitCycles == null) ? (that.maxWaitCycles == null) : this.maxWaitCycles.equals(that.maxWaitCycles));
      }
      return false;
    }

    @Override
    public int hashCode() {
      if (!$hashCodeMemoized) {
        int h = 1;
        h *= 1000003;
        h ^= __typename.hashCode();
        h *= 1000003;
        h ^= (id == null) ? 0 : id.hashCode();
        h *= 1000003;
        h ^= (type == null) ? 0 : type.hashCode();
        h *= 1000003;
        h ^= (measuredTime == null) ? 0 : measuredTime.hashCode();
        h *= 1000003;
        h ^= (trafficFlow == null) ? 0 : trafficFlow.hashCode();
        h *= 1000003;
        h ^= (name == null) ? 0 : name.hashCode();
        h *= 1000003;
        h ^= (trafficDirection == null) ? 0 : trafficDirection.hashCode();
        h *= 1000003;
        h ^= (trafficDirectionName == null) ? 0 : trafficDirectionName.hashCode();
        h *= 1000003;
        h ^= (speedLimit == null) ? 0 : speedLimit.hashCode();
        h *= 1000003;
        h ^= (averageSpeed == null) ? 0 : averageSpeed.hashCode();
        h *= 1000003;
        h ^= (detName == null) ? 0 : detName.hashCode();
        h *= 1000003;
        h ^= (giveWayDelay == null) ? 0 : giveWayDelay.hashCode();
        h *= 1000003;
        h ^= (maxWaitCycles == null) ? 0 : maxWaitCycles.hashCode();
        $hashCode = h;
        $hashCodeMemoized = true;
      }
      return $hashCode;
    }

    public static final class Mapper implements ResponseFieldMapper<Properties> {
      @Override
      public Properties map(ResponseReader reader) {
        final String __typename = reader.readString($responseFields[0]);
        final String id = reader.readString($responseFields[1]);
        final String typeStr = reader.readString($responseFields[2]);
        final TrafficFluencySourceType type;
        if (typeStr != null) {
          type = TrafficFluencySourceType.safeValueOf(typeStr);
        } else {
          type = null;
        }
        final Object measuredTime = reader.readCustomType((ResponseField.CustomTypeField) $responseFields[3]);
        final String trafficFlowStr = reader.readString($responseFields[4]);
        final TrafficFlow trafficFlow;
        if (trafficFlowStr != null) {
          trafficFlow = TrafficFlow.safeValueOf(trafficFlowStr);
        } else {
          trafficFlow = null;
        }
        final String name = reader.readString($responseFields[5]);
        final Integer trafficDirection = reader.readInt($responseFields[6]);
        final String trafficDirectionName = reader.readString($responseFields[7]);
        final Integer speedLimit = reader.readInt($responseFields[8]);
        final Integer averageSpeed = reader.readInt($responseFields[9]);
        final String detName = reader.readString($responseFields[10]);
        final Double giveWayDelay = reader.readDouble($responseFields[11]);
        final Double maxWaitCycles = reader.readDouble($responseFields[12]);
        return new Properties(__typename, id, type, measuredTime, trafficFlow, name, trafficDirection, trafficDirectionName, speedLimit, averageSpeed, detName, giveWayDelay, maxWaitCycles);
      }
    }
  }
}
